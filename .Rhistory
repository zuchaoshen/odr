od.2m(icc = .15, r12 = .6, r22m = .4, d = 0.20,
c1 = 10, c1t = 150, c2 = 200, omega = 0.01,
Jlim = (2.01, 1000))
od.2m(icc = .15, r12 = .6, r22m = .4, d = 0.20,
c1 = 10, c1t = 150, c2 = 200, omega = 0.01,
Jlim = c(2.01, 1000))
od.2m(icc = .15, r12 = .6, r22m = .4, d = 0.20,
c1 = 10, c1t = 150, c2 = 200, omega = 0.01,
Jlim = c(2.01, 1000))
cost.model == TRUE
cost.model = TRUE
cost.model == TRUE
?par
?power.2m
# Unconstrained optimal design #---------
myod1 <- od.2m(icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
varlim = c(0, 0.005))
myod1$out # n = 23.5, p = 0.24
mym.1 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8)
mym.1$out  # m = 1882, J = 22.8
mym.1 <- power.2m(d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
mym.1
mym.2 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5))
mym.2$out  # m = 2424, J = 18
mym.3 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5, n = 5))
mym.3$out  # m = 2502, J = 66.7
mypower <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882)
mypower$out  # power = 0.80
myod1 <- od.2m(icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
varlim = c(0, 0.005))
myJ <- power.2m(cost.model = FALSE, d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
mypower1 <- power.2m(cost.model = FALSE, expr = myod1, J = 22.8,
d = 0.2, q = 1)
mypower1 <- power.2m(cost.model = FALSE, expr = myod1, J = 22.8,
d = 0.2, q = 1)
myod1 <- od.2m(icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
varlim = c(0, 0.005))
myod1$out
out
?power.2m
# Unconstrained optimal design #---------
myod1 <- od.2m(icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
varlim = c(0, 0.005))
myod1$out # n = 23.5, p = 0.24
# ------- Power analyses by default considering costs and budget -------
# Required budget and sample size
mym.1 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8)
mym.1$out  # m = 1882, J = 22.8
# mym.1$par  # parameters and their values used for the function
# Or, equivalently, specify every argument in the function
mym.1 <- power.2m(d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
# Required budget and sample size with constrained p
mym.2 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5))
mym.2$out  # m = 2424, J = 18
# Required budget and sample size with constrained p and n
mym.3 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5, n = 5))
mym.3$out  # m = 2502, J = 66.7
# Power calculation
mypower <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882)
mypower$out  # power = 0.80
# Power calculation under constrained p (p = 0.5)
mypower.1 <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882,
constraint = list(p = 0.5))
mypower.1$out  # power = 0.68
# MDES calculation
mymdes <- power.2m(expr = myod1, q = 1, power = 0.80, m = 1882)
mymdes$out  # d = 0.20
# ------- Conventional power analyses with cost.model = FALSE-------
# Required sample size
myJ <- power.2m(cost.model = FALSE, expr = myod1, d = 0.2,
q = 1, power = 0.8)
myJ$out  # J = 22.8
# Power calculation
mypower <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882)
mypower$out  # power = 0.80
# Power calculation under constrained p (p = 0.5)
mypower.1 <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882,
constraint = list(p = 0.5))
mypower.1$out  # power = 0.68
# Unconstrained optimal design #---------
myod1 <- od.2m(icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
varlim = c(0, 0.005))
myod1$out # n = 23.5, p = 0.24
# ------- Power analyses by default considering costs and budget -------
# Required budget and sample size
mym.1 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8)
mym.1$out  # m = 1882, J = 22.8
# mym.1$par  # parameters and their values used for the function
# Or, equivalently, specify every argument in the function
mym.1 <- power.2m(d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
# Required budget and sample size with constrained p
mym.2 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5))
mym.1
# mym.1$par  # parameters and their values used for the function
# Or, equivalently, specify every argument in the function
mym.1 <- power.2m(d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
# Required budget and sample size with constrained p
mym.2 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5))
mym.2$out  # m = 2424, J = 18
# Required budget and sample size with constrained p and n
mym.3 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5, n = 5))
mym.3$out  # m = 2502, J = 66.7
# Power calculation
mypower <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882)
mypower$out  # power = 0.80
# Power calculation under constrained p (p = 0.5)
mypower.1 <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882,
constraint = list(p = 0.5))
mypower.1$out  # power = 0.68
# MDES calculation
mymdes <- power.2m(expr = myod1, q = 1, power = 0.80, m = 1882)
mymdes$out  # d = 0.20
# ------- Conventional power analyses with cost.model = FALSE-------
# Required sample size
myJ <- power.2m(cost.model = FALSE, expr = myod1, d = 0.2,
q = 1, power = 0.8)
myJ$out  # J = 22.8
# myL$par  # parameters and their values used for the function
# Or, equivalently, specify every argument in the function
myJ <- power.2m(cost.model = FALSE, d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
myJ
# Power calculation
mypower1 <- power.2m(cost.model = FALSE, expr = myod1, J = 22.8,
d = 0.2, q = 1)
myod$out
# Power calculation
mypower1 <- power.2m(expr = myod1, J = 22.8,
d = 0.2, q = 1)
mypower1$out  # power = 0.80
# MDES calculation
mymdes1 <- power.2m(expr = myod1, J = 22.8,
power = 0.8, q = 1)
mymdes1$out  # d = 0.20
mymdes1 <- power.2m(expr = myod1, J = 22.8,
power = 0.8, q = 1)
mymdes1$out  # d = 0.20
# MDES calculation
mymdes1 <- power.2m(cost.model = FALSE, expr = myod1, J = 22.8,
power = 0.8, q = 1)
# Power calculation
mypower1 <- power.2m(expr = myod1, J = 22.8,
d = 0.2, q = 1)
mypower1$out  # power = 0.80
# Power calculation
mypower1 <- power.2m(expr = myod1, J = 22.8,
d = 0.2, q = 1)
mypower1$out  # power = 0.80
# Unconstrained optimal design #---------
myod1 <- od.2m(icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
varlim = c(0, 0.005))
myod1$out # n = 23.5, p = 0.24
# ------- Power analyses by default considering costs and budget -------
# Required budget and sample size
mym.1 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8)
mym.1$out  # m = 1882, J = 22.8
# mym.1$par  # parameters and their values used for the function
# Or, equivalently, specify every argument in the function
mym.1 <- power.2m(d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
# Required budget and sample size with constrained p
mym.2 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5))
mym.2$out  # m = 2424, J = 18
# Required budget and sample size with constrained p and n
mym.3 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5, n = 5))
mym.3$out  # m = 2502, J = 66.7
# Power calculation
mypower <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882)
mypower$out  # power = 0.80
# Power calculation under constrained p (p = 0.5)
mypower.1 <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882,
constraint = list(p = 0.5))
mypower.1$out  # power = 0.68
# MDES calculation
mymdes <- power.2m(expr = myod1, q = 1, power = 0.80, m = 1882)
mymdes$out  # d = 0.20
# ------- Conventional power analyses with cost.model = FALSE-------
# Required sample size
myJ <- power.2m(cost.model = FALSE, expr = myod1, d = 0.2,
q = 1, power = 0.8)
myJ$out  # J = 22.8
# myL$par  # parameters and their values used for the function
# Or, equivalently, specify every argument in the function
myJ <- power.2m(cost.model = FALSE, d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
# Power calculation
mypower1 <- power.2m(expr = myod1, J = 22.8,
d = 0.2, q = 1)
mypower1$out  # power = 0.80
# MDES calculation
mymdes1 <- power.2m(cost.model = FALSE, expr = myod1, J = 22.8,
power = 0.8, q = 1)
mymdes1$out  # d = 0.20
# Power calculation
mypower1 <- power.2m(expr = myod1, J = 22.8,
d = 0.2, q = 1)
mypower1$out  # power = 0.80
# MDES calculation
mymdes1 <- power.2m(cost.model = FALSE, expr = myod1, J = 22.8,
power = 0.8, q = 1)
# MDES calculation
mymdes1 <- power.2m(expr = myod1, J = 22.8,
power = 0.8, q = 1)
mymdes1$out  # d = 0.20
# Unconstrained optimal design #---------
myod1 <- od.2m(icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
varlim = c(0, 0.005))
myod1$out # n = 23.5, p = 0.24
# ------- Power analyses by default considering costs and budget -------
# Required budget and sample size
mym.1 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8)
mym.1$out  # m = 1882, J = 22.8
# mym.1$par  # parameters and their values used for the function
# Or, equivalently, specify every argument in the function
mym.1 <- power.2m(d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
# Required budget and sample size with constrained p
mym.2 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5))
mym.2$out  # m = 2424, J = 18
# Required budget and sample size with constrained p and n
mym.3 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5, n = 5))
mym.3$out  # m = 2502, J = 66.7
# Power calculation
mypower <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882)
mypower$out  # power = 0.80
# Power calculation under constrained p (p = 0.5)
mypower.1 <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882,
constraint = list(p = 0.5))
mypower.1$out  # power = 0.68
# MDES calculation
mymdes <- power.2m(expr = myod1, q = 1, power = 0.80, m = 1882)
mymdes$out  # d = 0.20
# ------- Conventional power analyses with cost.model = FALSE-------
# Required sample size
myJ <- power.2m(cost.model = FALSE, expr = myod1, d = 0.2,
q = 1, power = 0.8)
myJ$out  # J = 22.8
# myL$par  # parameters and their values used for the function
# Or, equivalently, specify every argument in the function
myJ <- power.2m(cost.model = FALSE, d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
myJ
myJ$out
# Power calculation
mypower1 <- power.2m(expr = myod1, J = 22.8,
d = 0.2, q = 1)
mypower1$out  # power = 0.80
# MDES calculation
mymdes1 <- power.2m(expr = myod1, J = 22.8,
power = 0.8, q = 1)
mymdes1$out  # d = 0.20
# MDES calculation
mymdes1 <- power.2m(cost.model = FALSE, expr = myod1, J = 22.8,
power = 0.8, q = 1)
# Unconstrained optimal design #---------
myod1 <- od.2m(icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
varlim = c(0, 0.005))
myod1$out # n = 23.5, p = 0.24
# ------- Power analyses by default considering costs and budget -------
# Required budget and sample size
mym.1 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8)
mym.1$out  # m = 1882, J = 22.8
# mym.1$par  # parameters and their values used for the function
# Or, equivalently, specify every argument in the function
mym.1 <- power.2m(d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
# Required budget and sample size with constrained p
mym.2 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5))
mym.2$out  # m = 2424, J = 18
# Required budget and sample size with constrained p and n
mym.3 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5, n = 5))
mym.3$out  # m = 2502, J = 66.7
# Power calculation
mypower <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882)
mypower$out  # power = 0.80
# Power calculation under constrained p (p = 0.5)
mypower.1 <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882,
constraint = list(p = 0.5))
mypower.1$out  # power = 0.68
# MDES calculation
mymdes <- power.2m(expr = myod1, q = 1, power = 0.80, m = 1882)
mymdes$out  # d = 0.20
# ------- Conventional power analyses with cost.model = FALSE-------
# Required sample size
myJ <- power.2m(cost.model = FALSE, expr = myod1, d = 0.2,
q = 1, power = 0.8)
myJ$out  # J = 22.8
# myL$par  # parameters and their values used for the function
# Or, equivalently, specify every argument in the function
myJ <- power.2m(cost.model = FALSE, d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
myJ$out
# Power calculation
mypower1 <- power.2m(expr = myod1, J = 22.8,
d = 0.2, q = 1)
mypower1$out  # power = 0.80
# MDES calculation
mymdes1 <- power.2m(cost.model = FALSE, expr = myod1, J = 22.8,
power = 0.8, q = 1)
mymdes1$out  # d = 0.20
# Power calculation
mypower1 <- power.2m(expr = myod1, J = 22.8,
d = 0.2, q = 1)
mypower1$out  # power = 0.80
myod1
# Unconstrained optimal design #---------
myod1 <- od.2m(icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
varlim = c(0, 0.005))
myod1$out # n = 23.5, p = 0.24
# ------- Power analyses by default considering costs and budget -------
# Required budget and sample size
mym.1 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8)
mym.1$out  # m = 1882, J = 22.8
# mym.1$par  # parameters and their values used for the function
# Or, equivalently, specify every argument in the function
mym.1 <- power.2m(d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
# Required budget and sample size with constrained p
mym.2 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5))
mym.2$out  # m = 2424, J = 18
# Required budget and sample size with constrained p and n
mym.3 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5, n = 5))
mym.3$out  # m = 2502, J = 66.7
# Power calculation
mypower <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882)
mypower$out  # power = 0.80
# Power calculation under constrained p (p = 0.5)
mypower.1 <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882,
constraint = list(p = 0.5))
mypower.1$out  # power = 0.68
# MDES calculation
mymdes <- power.2m(expr = myod1, q = 1, power = 0.80, m = 1882)
mymdes$out  # d = 0.20
# ------- Conventional power analyses with cost.model = FALSE-------
# Required sample size
myJ <- power.2m(cost.model = FALSE, expr = myod1, d = 0.2,
q = 1, power = 0.8)
myJ$out  # J = 22.8
# myL$par  # parameters and their values used for the function
# Or, equivalently, specify every argument in the function
myJ <- power.2m(cost.model = FALSE, d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
myJ$out
# Power calculation
mypower1 <- power.2m(expr = myod1, J = 22.8,
d = 0.2, q = 1)
mypower1$out  # power = 0.80
# Power calculation
mypower1 <- power.2m(cost.model = FALSE, expr = myod1, J = 22.8,
d = 0.2, q = 1)
mypower1$out  # power = 0.80
# MDES calculation
mymdes1 <- power.2m(cost.model = FALSE, expr = myod1, J = 22.8,
power = 0.8, q = 1)
mymdes1$out  # d = 0.20
?power.2m
# Power calculation
mypower <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882)
mypower$out  # power = 0.80
# Power calculation under constrained p (p = 0.5)
mypower.1 <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882,
constraint = list(p = 0.5))
mypower.1$out  # power = 0.68
# MDES calculation
mymdes <- power.2m(expr = myod1, q = 1, power = 0.80, m = 1882)
mymdes$out  # d = 0.20
?power.2m
# Unconstrained optimal design #---------
myod1 <- od.2m(icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
varlim = c(0, 0.005))
myod1$out # n = 23.5, p = 0.24
# ------- Power analyses by default considering costs and budget -------
# Required budget and sample size
mym.1 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8)
mym.1$out  # m = 1882, J = 22.8
# mym.1$par  # parameters and their values used for the function
# Or, equivalently, specify every argument in the function
mym.1 <- power.2m(d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
# Required budget and sample size with constrained p
mym.2 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5))
mym.2$out  # m = 2424, J = 18
# Required budget and sample size with constrained p and n
mym.3 <- power.2m(expr = myod1, d = 0.2, q = 1, power = 0.8,
constraint = list(p = 0.5, n = 5))
mym.3$out  # m = 2502, J = 66.7
# Power calculation
mypower <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882)
mypower$out  # power = 0.80
# Power calculation under constrained p (p = 0.5)
mypower.1 <- power.2m(expr = myod1, q = 1, d = 0.2, m = 1882,
constraint = list(p = 0.5))
mypower.1$out  # power = 0.68
# MDES calculation
mymdes <- power.2m(expr = myod1, q = 1, power = 0.80, m = 1882)
mymdes$out  # d = 0.20
# ------- Conventional power analyses with cost.model = FALSE-------
# Required sample size
myJ <- power.2m(cost.model = FALSE, expr = myod1, d = 0.2,
q = 1, power = 0.8)
myJ$out  # J = 22.8
# myL$par  # parameters and their values used for the function
# Or, equivalently, specify every argument in the function
myJ <- power.2m(cost.model = FALSE, d = 0.2, power = 0.8, q = 1,
icc = 0.2, omega = 0.02, r12 = 0.5, r22m = 0.5,
c1 = 1, c2 = 10, c1t = 10,
n = 23.5, p = 0.24)
# Power calculation
mypower1 <- power.2m(cost.model = FALSE, expr = myod1, J = 22.8,
d = 0.2, q = 1)
mypower1$out  # power = 0.80
# MDES calculation
mymdes1 <- power.2m(cost.model = FALSE, expr = myod1, J = 22.8,
power = 0.8, q = 1)
mymdes1$out  # d = 0.20
expr$par$omega
myod <- od.2m.only.mod(icc = .2, r12 = .5, r22m = .5,
c1 = 10, c1t = 100, c2 = 50, omega = .01)
mypower <- power.2m.mod(expr = myod, m=myod$out$m, gamma = 0.1); mypower$out
myod$out$m
mypower <- power.2m.mod(expr = myod, m=100000, gamma = 0.1); mypower$out
myod <- od.2m.only.mod(icc = .2, r12 = .5, r22m = .5,
c1 = 10, c1t = 100, c2 = 50, omega = .01)
mypower <- power.2m.mod(expr = myod, m=1000, gamma = 0.1); mypower$out
myod <- od.2m.only.mod(icc = .2, r12 = .5, r22m = .5,
c1 = 10, c1t = 100, c2 = 50, omega = .01)
mypower <- power.2m.mod(expr = myod, m=1000, gamma = 0.1); mypower$out
myod <- od.2m.only.mod(icc = .2, r12 = .5, r22m = .5,
c1 = 10, c1t = 100, c2 = 50, omega = .01)
mypower <- power.2m.mod(expr = myod, m=1000, gamma = 0.1); mypower$out
myod <- od.2m.only.mod(icc = .2, r12 = .5, r22m = .5,
c1 = 10, c1t = 100, c2 = 50, omega = .01)
mypower <- power.2m.mod(expr = myod, m=10000, gamma = 0.1); mypower$out
myod <- od.2m.only.mod(icc = .2, r12 = .5, r22m = .5,
c1 = 10, c1t = 100, c2 = 50, omega = .01)
mypower <- power.2m.mod(expr = myod, m=10000, gamma = 0.1); mypower$out
myod <- od.2m.only.mod(icc = .2, r12 = .5, r22m = .5,
c1 = 10, c1t = 100, c2 = 50, omega = .01)
mypower <- power.2m.mod(expr = myod, m=100000, gamma = 0.1); mypower$out
myod <- od.2m.only.mod(icc = .2, r12 = .5, r22m = .5,
c1 = 10, c1t = 100, c2 = 50, omega = .01)
mypower <- power.2m.mod(expr = myod, m=100000, gamma = 0.1); mypower$out
myod <- od.2m.only.mod(icc = .2, r12 = .5, r22m = .5,
c1 = 10, c1t = 100, c2 = 50, omega = .01)
mypower <- power.2m.mod(expr = myod, m=100000, gamma = 0.1); mypower$out
mypower <- power.2m.mod(expr = myod, power.mod = .8, gamma = 0.1); mypower$out
mypower <- power.2m.mod(expr = myod, power.mod = .8, gamma = 0.1,
mlim = c(10000, 1e10)); mypower$out
myod <- od.2m.only.mod(icc = .2, r12 = .5, r22m = .5,
c1 = 10, c1t = 100, c2 = 50, omega = .01)
mypower <- power.2m.mod(expr = myod, power.mod = .8, gamma = 0.1); mypower$out
